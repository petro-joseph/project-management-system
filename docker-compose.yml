version: '3.8'

services:
  nginx:
    build:
      context: './nginx'
      dockerfile: Dockerfile
    container_name: nginx_proxy
    ports:
      - "8085:8085"  # HTTP
      - "8443:443"   # HTTPS
    volumes:
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
      - grafana
      - prometheus
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - CERT_CN=localhost
      - COMPOSE_ENV=development

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    # Removed ports: "3001:3001" - Access via Nginx
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=project_management
      - JWT_SECRET=your-secret-key
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_FROM=noreply@projectmanagement.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - postgres
      - mailhog
    networks:
      - app-network
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    # Removed ports: "3000:3000" - Access via Nginx
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - app-network
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    # Removed ports: "3002:3000" - Access via Nginx
    volumes:
      - ./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/provisioning/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://localhost:8443/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true  # Enable subpath support
    depends_on:
      - prometheus
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    # Removed ports: "9090:9090" - Access via Nginx
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    # Removed ports: "9100:9100" - Access via Nginx
    networks:
      - app-network

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=project_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # Keep SMTP port internal
      - "8025:8025"  # Keep MailHog UI accessible
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: adminer
    # Removed ports: "8080:8080" - Access via Nginx
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - app-network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    # Removed ports: "9121:9121" - Access via Nginx
    networks:
      - app-network
    environment:
      - REDIS_ADDR=redis:6379

volumes:
  postgres_data:
  grafana-storage:
  redis_data:

networks:
  app-network:
    driver: bridge